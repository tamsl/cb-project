Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> system
Rule 1     system -> <empty>
Rule 2     system -> system list
Rule 3     list -> instr NEWLINE
Rule 4     list -> NOTE NEWLINE
Rule 5     list -> instr NOTE NEWLINE
Rule 6     instr -> control
Rule 7     instr -> DIRECT
Rule 8     instr -> NUMB COLON
Rule 9     control -> <empty>
Rule 10    control -> NUMB NUMB COMMA NUMB COMMA NUMB
Rule 11    control -> NUMB NUMB COMMA NUMB
Rule 12    control -> NUMB NUMB
Rule 13    control -> NUMB

Terminals, with rules where they appear

COLON                : 8
COMMA                : 10 10 11
DIRECT               : 7
NEWLINE              : 3 4 5
NOTE                 : 4 5
NUMB                 : 8 10 10 10 10 11 11 11 12 12 13
error                : 

Nonterminals, with rules where they appear

control              : 6
instr                : 3 5
list                 : 2
system               : 2 0

Parsing method: LALR

state 0

    (0) S' -> . system
    (1) system -> .
    (2) system -> . system list

    NOTE            reduce using rule 1 (system -> .)
    DIRECT          reduce using rule 1 (system -> .)
    NUMB            reduce using rule 1 (system -> .)
    $end            reduce using rule 1 (system -> .)
    NEWLINE         reduce using rule 1 (system -> .)

    system                         shift and go to state 1

state 1

    (0) S' -> system .
    (2) system -> system . list
    (3) list -> . instr NEWLINE
    (4) list -> . NOTE NEWLINE
    (5) list -> . instr NOTE NEWLINE
    (6) instr -> . control
    (7) instr -> . DIRECT
    (8) instr -> . NUMB COLON
    (9) control -> .
    (10) control -> . NUMB NUMB COMMA NUMB COMMA NUMB
    (11) control -> . NUMB NUMB COMMA NUMB
    (12) control -> . NUMB NUMB
    (13) control -> . NUMB

  ! shift/reduce conflict for NOTE resolved as shift
    NOTE            shift and go to state 6
    DIRECT          shift and go to state 5
    NUMB            shift and go to state 7
    NEWLINE         reduce using rule 9 (control -> .)

  ! NOTE            [ reduce using rule 9 (control -> .) ]

    control                        shift and go to state 2
    list                           shift and go to state 4
    instr                          shift and go to state 3

state 2

    (6) instr -> control .

    NEWLINE         reduce using rule 6 (instr -> control .)
    NOTE            reduce using rule 6 (instr -> control .)


state 3

    (3) list -> instr . NEWLINE
    (5) list -> instr . NOTE NEWLINE

    NEWLINE         shift and go to state 9
    NOTE            shift and go to state 8


state 4

    (2) system -> system list .

    NOTE            reduce using rule 2 (system -> system list .)
    DIRECT          reduce using rule 2 (system -> system list .)
    NUMB            reduce using rule 2 (system -> system list .)
    $end            reduce using rule 2 (system -> system list .)
    NEWLINE         reduce using rule 2 (system -> system list .)


state 5

    (7) instr -> DIRECT .

    NEWLINE         reduce using rule 7 (instr -> DIRECT .)
    NOTE            reduce using rule 7 (instr -> DIRECT .)


state 6

    (4) list -> NOTE . NEWLINE

    NEWLINE         shift and go to state 10


state 7

    (8) instr -> NUMB . COLON
    (10) control -> NUMB . NUMB COMMA NUMB COMMA NUMB
    (11) control -> NUMB . NUMB COMMA NUMB
    (12) control -> NUMB . NUMB
    (13) control -> NUMB .

    COLON           shift and go to state 11
    NUMB            shift and go to state 12
    NEWLINE         reduce using rule 13 (control -> NUMB .)
    NOTE            reduce using rule 13 (control -> NUMB .)


state 8

    (5) list -> instr NOTE . NEWLINE

    NEWLINE         shift and go to state 13


state 9

    (3) list -> instr NEWLINE .

    NOTE            reduce using rule 3 (list -> instr NEWLINE .)
    DIRECT          reduce using rule 3 (list -> instr NEWLINE .)
    NUMB            reduce using rule 3 (list -> instr NEWLINE .)
    $end            reduce using rule 3 (list -> instr NEWLINE .)
    NEWLINE         reduce using rule 3 (list -> instr NEWLINE .)


state 10

    (4) list -> NOTE NEWLINE .

    NOTE            reduce using rule 4 (list -> NOTE NEWLINE .)
    DIRECT          reduce using rule 4 (list -> NOTE NEWLINE .)
    NUMB            reduce using rule 4 (list -> NOTE NEWLINE .)
    $end            reduce using rule 4 (list -> NOTE NEWLINE .)
    NEWLINE         reduce using rule 4 (list -> NOTE NEWLINE .)


state 11

    (8) instr -> NUMB COLON .

    NEWLINE         reduce using rule 8 (instr -> NUMB COLON .)
    NOTE            reduce using rule 8 (instr -> NUMB COLON .)


state 12

    (10) control -> NUMB NUMB . COMMA NUMB COMMA NUMB
    (11) control -> NUMB NUMB . COMMA NUMB
    (12) control -> NUMB NUMB .

    COMMA           shift and go to state 14
    NEWLINE         reduce using rule 12 (control -> NUMB NUMB .)
    NOTE            reduce using rule 12 (control -> NUMB NUMB .)


state 13

    (5) list -> instr NOTE NEWLINE .

    NOTE            reduce using rule 5 (list -> instr NOTE NEWLINE .)
    DIRECT          reduce using rule 5 (list -> instr NOTE NEWLINE .)
    NUMB            reduce using rule 5 (list -> instr NOTE NEWLINE .)
    $end            reduce using rule 5 (list -> instr NOTE NEWLINE .)
    NEWLINE         reduce using rule 5 (list -> instr NOTE NEWLINE .)


state 14

    (10) control -> NUMB NUMB COMMA . NUMB COMMA NUMB
    (11) control -> NUMB NUMB COMMA . NUMB

    NUMB            shift and go to state 15


state 15

    (10) control -> NUMB NUMB COMMA NUMB . COMMA NUMB
    (11) control -> NUMB NUMB COMMA NUMB .

    COMMA           shift and go to state 16
    NEWLINE         reduce using rule 11 (control -> NUMB NUMB COMMA NUMB .)
    NOTE            reduce using rule 11 (control -> NUMB NUMB COMMA NUMB .)


state 16

    (10) control -> NUMB NUMB COMMA NUMB COMMA . NUMB

    NUMB            shift and go to state 17


state 17

    (10) control -> NUMB NUMB COMMA NUMB COMMA NUMB .

    NEWLINE         reduce using rule 10 (control -> NUMB NUMB COMMA NUMB COMMA NUMB .)
    NOTE            reduce using rule 10 (control -> NUMB NUMB COMMA NUMB COMMA NUMB .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for NOTE in state 1 resolved as shift
